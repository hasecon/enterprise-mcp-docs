[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "enterprise-mcp-docs"
version = "0.1.0"
description = "Enterprise MCP Documentation Server - Multi-tool documentation provider for Claude Code and other MCP clients"
authors = [
    {name = "Hasecon", email = "contact@hasecon.nl"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.9"
keywords = ["mcp", "documentation", "ai", "claude", "enterprise", "tools"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Documentation",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "mcp>=0.1.0",
    "aiohttp>=3.9.0",
    "beautifulsoup4>=4.12.0",
    "chromadb>=0.4.0",
    "sentence-transformers>=2.2.0",
    "redis>=5.0.0",
    "pydantic>=2.5.0",
    "python-dotenv>=1.0.0",
    "click>=8.1.0",
    "rich>=13.0.0",
    "tenacity>=8.2.0",
    "httpx>=0.26.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.9.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.6.0",
    "pre-commit>=3.5.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.4.0",
    "mkdocs-mermaid2-plugin>=1.1.0",
]
context7 = [
    "upstash-redis>=0.1.0",
]
monitoring = [
    "prometheus-client>=0.19.0",
    "opentelemetry-api>=1.21.0",
]

[project.urls]
Homepage = "https://github.com/hasecon/enterprise-mcp-docs"
Documentation = "https://hasecon.github.io/enterprise-mcp-docs"
Repository = "https://github.com/hasecon/enterprise-mcp-docs"
Issues = "https://github.com/hasecon/enterprise-mcp-docs/issues"
Changelog = "https://github.com/hasecon/enterprise-mcp-docs/blob/main/CHANGELOG.md"

[project.scripts]
enterprise-mcp-docs = "enterprise_mcp_docs.cli:main"
mcp-docs-server = "enterprise_mcp_docs.server:main"
mcp-docs-crawl = "enterprise_mcp_docs.crawl:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
enterprise_mcp_docs = ["config/*.json", "templates/*.html"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["enterprise_mcp_docs"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/test_*.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]